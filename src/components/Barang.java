/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package components;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import models.BarangModel;

/**
 *
 * @author rizkyalam
 */
public class Barang extends javax.swing.JFrame {
    private int userId;
    private String userName;
    
    /**
     * Creates new form Barang
     */
    public Barang(int userId, String userName) throws SQLException {
        this.userId = userId;
        this.userName = userName;
        
        initComponents();
        aksiTableBtn();
        fetchAllData(userId);
        
        username.setText("Halo, "+ userName);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableBarang = new javax.swing.JTable();
        logoutBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tambahBtn = new javax.swing.JButton();
        username = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tableBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "ID", "Nama", "Stok", "Aksi"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableBarang.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tableBarang);

        logoutBtn.setText("Logout");
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Data barang");

        tambahBtn.setText("+ tambah barang");
        tambahBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahBtnActionPerformed(evt);
            }
        });

        username.setText("Halo");

        jButton1.setText("edit barang");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(username)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(logoutBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tambahBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(160, 160, 160))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tambahBtn)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logoutBtn)
                    .addComponent(username))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void fetchAllData(int userId) throws SQLException {
        BarangModel barang = new BarangModel();
        
        ArrayList<ArrayList<Object>> list = barang.all(userId);
        
        DefaultTableModel tblModel = (DefaultTableModel) tableBarang.getModel();
        
        for (int i = 0; i < list.size(); i++) {
            int idBarang = (int) list.get(i).get(0);
            String namaBarang = (String) list.get(i).get(1);
            int stokBarang = (int) list.get(i).get(2);
            
            Object[] row = {i + 1, idBarang, namaBarang, stokBarang, idBarang};
            
            tblModel.addRow(row);
        }
    }
    
    /**
     * Membuat tombol pada tabel
     * 
     * @return void
     */
    private void aksiTableBtn() {
        JButton btn = new JButton("click here");
        btn.setBounds(50, 100, 95, 30);
        
        tableBarang.getColumnModel()
                .getColumn(4)
                .setCellRenderer(new ButtonRenderer());
        
        tableBarang.getColumnModel()
                .getColumn(4)
                .setCellEditor(new ButtonEditor(new JTextField(), this.userId));
        
        dispose();
    }
    
    private void tambahBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahBtnActionPerformed
        TambahBarang tambahBarang = new TambahBarang(this.userId, this.userName);
        tambahBarang.setVisible(true);
        dispose();
    }//GEN-LAST:event_tambahBtnActionPerformed

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
        Login loginForm = new Login();
        loginForm.setVisible(true);
        
        dispose();
    }//GEN-LAST:event_logoutBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            EditBarang editBarang;
            editBarang = new EditBarang(this.userId, this.userName);
            editBarang.setVisible(true);
            dispose();
        } catch (SQLException ex) {
            Logger.getLogger(Barang.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    public void setUserId(int id) {
        userId = id;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JTable tableBarang;
    private javax.swing.JButton tambahBtn;
    private javax.swing.JLabel username;
    // End of variables declaration//GEN-END:variables
}

class ButtonRenderer extends JButton implements TableCellRenderer {
    public ButtonRenderer() {
        setOpaque(true);
    }

    @Override
    public Component getTableCellRendererComponent(
        JTable table, 
        Object value, 
        boolean isSelected, 
        boolean hasFocus, 
        int row, 
        int column
    ) {
        setText((value == null) ? "" : "hapus");
        
        return this;
    }
    
}

class ButtonEditor extends DefaultCellEditor {
    protected JButton btn;
    private String label;
    private Boolean clicked;
    private int barangId;
    private int userId;
    
    public ButtonEditor(JTextField txt, int userId) {
        super(txt);
        
        this.userId = userId;
        
        btn = new JButton();
        btn.setOpaque(true);
        
        btn.addActionListener(new ActionListener() {
           @Override
           public void actionPerformed(ActionEvent e) {
               fireEditingStopped();
           }
        });
    }
    
    @Override
    public Component getTableCellEditorComponent(
        JTable table, 
        Object obj,
        boolean selected,
        int row,
        int col
    ) {
        this.barangId = Integer.parseInt(obj.toString());
        label = (obj == null) ? "" : "hapus";
        btn.setText(label);
        clicked = true;
        
        return btn;
    }
    
    @Override
    public Object getCellEditorValue() {
        try {
            if (clicked) {
                int value = JOptionPane.showConfirmDialog(
                    null,
                    "Apakah anda yakin ingin menghapus data barang?",
                    "Yakin ?",
                    JOptionPane.YES_NO_OPTION
                );
                
                if (value == JOptionPane.YES_NO_OPTION) {
                    BarangModel barangModel = new BarangModel();
                    barangModel.deleteById(this.barangId, this.userId);
                }
            }

            clicked = false;

            return new String(label);
        } catch (SQLException se) {
            System.out.print(se);
        }
        return null;
    }
    
    @Override
    public boolean stopCellEditing() {
        clicked = false;
        return super.stopCellEditing();
    }
    
    @Override
    protected void fireEditingStopped() {
        super.fireEditingStopped();
    }
}